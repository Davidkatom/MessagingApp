// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WhatsdownAPI.Data;

#nullable disable

namespace WhatsdownAPI.Migrations
{
    [DbContext(typeof(WhatsdownAPIContext))]
    partial class WhatsdownAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WhatsdownAPI.Contacts", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("WhatsdownAPI.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContactId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ContactsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reciever")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("ContactsId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("WhatsdownAPI.Models.Contact", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("WhatsdownAPI.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserName");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WhatsdownAPI.Message", b =>
                {
                    b.HasOne("WhatsdownAPI.Models.Contact", null)
                        .WithMany("Messages")
                        .HasForeignKey("ContactId");

                    b.HasOne("WhatsdownAPI.Contacts", null)
                        .WithMany("Messages")
                        .HasForeignKey("ContactsId");
                });

            modelBuilder.Entity("WhatsdownAPI.Models.Contact", b =>
                {
                    b.HasOne("WhatsdownAPI.Models.User", null)
                        .WithMany("ContactList")
                        .HasForeignKey("UserName");
                });

            modelBuilder.Entity("WhatsdownAPI.Contacts", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("WhatsdownAPI.Models.Contact", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("WhatsdownAPI.Models.User", b =>
                {
                    b.Navigation("ContactList");
                });
#pragma warning restore 612, 618
        }
    }
}
